if (isEventSourceSupported()) {
    var src = new EventSource("@{ReceiveR}");
    src.onopen = function() { console.log("Eventsource opened."); };

    // remove deleted posts
    var board   = /\/board\/([\w_]+)/.exec(document.URL);
//     var threads = $(".thread").each(function() {
//         src.addEventListener(board[1]+"-"+($(this).attr("id").split("-")[1]) +"-deleted", function(msg) {
//             var ids = eval(msg.data);
//             for (var i = 0; i < ids.length; i++)
//                 $("#"+ids[i]).remove();
//         });
//     });

    // dynamic updating of edited posts
    $(".thread").each(function() {
        src.addEventListener(board[1]+"-"+($(this).attr("id").split("-")[1])+"-edited", function(msg) {
            var x = eval(msg.data);        
            var board  = x[0];
            var thread = x[1];
            var post   = x[2];
            var newMsg = decodeBase64(x[3]);
            var lm     = x[4];
            $("#post-"+post+"-"+thread+"-"+board+" .message").html(newMsg);
            if (lm) {
                $("#post-"+post+"-"+thread+"-"+board+" .last-modified-date").html(lm);
                $("#post-"+post+"-"+thread+"-"+board+" .last-modified").show();
            }
        });
    });
} else {
    console.log("Eventsource isn't supported.");
}

function expandThread(board, thread) {
    var replies = Monaba['expThreads'][thread];
    delete Monaba['expThreads'][thread];
    Monaba['expThreads'][thread] = $("#thread-"+thread+" .reply-post");
    if (replies) {
        $("#thread-"+thread+" .omitted").toggle();
        $("#thread-"+thread+" .reply-post").remove();
        $("#thread-"+thread+" .truncate-thread").toggle();
        $("#thread-"+thread+" .truncate-thread-after").toggle();
        $("#thread-"+thread+" .truncate-thread").after(replies);
    } else {
        $("#thread-"+thread+" .omitted .ajax-loading").toggle();
        $.get("/api/thread/"+board+"/"+thread+"/all", function(data) {
            if (data == "No such thread ") {
                popupMessage(#{toJSON $ msgrender MsgThreadNotExist}, 2000);
                delete Monaba['expThreads'][thread];
                $("#thread-"+thread+" .omitted .ajax-loading").toggle();
            } else if (data == "No posts in this thread ") {
                popupMessage(#{toJSON $ msgrender MsgNoPostsAnymore}, 2000);
                delete Monaba['expThreads'][thread];
                $("#thread-"+thread+" .omitted .ajax-loading").toggle();
            } else {
                $("#thread-"+thread+" .omitted .ajax-loading").toggle();
                $("#thread-"+thread+" .omitted").toggle();
                $("#thread-"+thread+" .reply-post").remove();
                $("#thread-"+thread+" .truncate-thread").toggle();
                $("#thread-"+thread+" .truncate-thread-after").toggle();
                $("#thread-"+thread+" .truncate-thread").after(data);
                baseInit();
                MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
            }
        });
    }
}

function truncateThread(thread,scrollToThreadBottom) {
    var replies = Monaba['expThreads'][thread];
    delete Monaba['expThreads'][thread];    
    Monaba['expThreads'][thread] = $("#thread-"+thread+" .reply-post");
    $("#thread-"+thread+" .omitted").toggle();
    $("#thread-"+thread+" .truncate-thread").toggle();
    $("#thread-"+thread+" .truncate-thread-after").toggle();
    $("#thread-"+thread+" .reply-post").remove();
    $("#thread-"+thread+" .truncate-thread").after(replies);
    if (scrollToThreadBottom) {
        var n = $("#thread-"+thread+" .reply-post:last .post-header .reflink a").attr("name");
        location.href = "#"+n;
    }
}
